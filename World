package computer_master_world;

import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import computer_master_display.Display;
import computer_master_motor.car;
import computer_master_tile.Tile;
/*World.txt dosyasını okuyor
 * Tile(zemin) objesi üretiyor
 * okuduğu verileri tile içine atıyor
 * 
 * 
 */
public class world {
	private int[][] tile;
	private int width,height;
	private car motor;
	public world(car motor){
		loadWorld("res/world.txt");
		this.motor =motor;
	}
	private int parseInt(String number){
		return Integer.parseInt(number);
	}
	private void loadWorld(String path){
		String file = loadFile(path);
		String[] space  = file.split("\\s+");
		
		width = parseInt(space[0]);
		height = parseInt(space[1]);
		tile = new int[width][height];
		for(int x =0; x<width; x++){
			for(int y=0; y<height; y++){
				tile[x][y] = parseInt(space[(x+y * width)+2]);
				
			}
		}
	
	}
	public String loadFile(String path){
		StringBuilder sr = new StringBuilder();
		try {
			BufferedReader reader =  new BufferedReader(new FileReader(path));
			String line;
			while((line = reader.readLine()) != null){
					sr.append(line +"\n");
			}
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return sr.toString();
	}
	public void render(Graphics g){
		
		int start = Math.max(0, (motor.getOfset()-150)/Tile.tileHeight);
		int end = Math.min(height, (motor.getOfset()+Display.height+30)/Tile.tileHeight);
		for(int i=0; i<width; i++){
			for(int j=start; j<end; j++){
				Tile t= Tile.tiles[tile[i][j]];
				
				t.render(g, i*Tile.tileWidth, (j*Tile.tileHeight)-motor.getOfset());
			}
		}
	}
	
}
